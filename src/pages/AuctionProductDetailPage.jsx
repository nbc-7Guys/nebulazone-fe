import React, { useState, useEffect, useCallback } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { auctionApi, bidApi } from "../services/api";
import HeaderNav from "../components/layout/HeaderNav";
import LoadingSpinner from "../components/ui/LoadingSpinner";
import { useWebSocket } from "../hooks/useWebSocket";
import { useToastContext } from "../contexts/ToastContext";

export default function AuctionProductDetailPage() {
    const { id } = useParams(); // auctionId
    const navigate = useNavigate();

    const [auction, setAuction] = useState(null);
    const [loading, setLoading] = useState(true);
    const [errorMsg, setErrorMsg] = useState("");
    const [bidPrice, setBidPrice] = useState("");
    const [bidPriceDisplay, setBidPriceDisplay] = useState("");
    const [bidLoading, setBidLoading] = useState(false);
    const [bids, setBids] = useState([]);
    const [bidPage, setBidPage] = useState(1);
    const [hasMoreBids, setHasMoreBids] = useState(true);
    const [timeLeft, setTimeLeft] = useState("");
    
    const { subscribe, unsubscribe, isConnected } = useWebSocket();
    const { showToast } = useToastContext();

    const fetchAuction = useCallback(async () => {
        if (!id) return;
        
        setLoading(true);
        setErrorMsg("");
        try {
            const data = await auctionApi.getAuction(id);
            console.log('Í≤ΩÎß§ Îç∞Ïù¥ÌÑ∞:', data);
            setAuction(data);
        } catch (error) {
            console.error(error);
            setErrorMsg("Í≤ΩÎß§ ÏÉÅÌíà Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.");
        } finally {
            setLoading(false);
        }
    }, [id]);
    
    const fetchBids = useCallback(async (page = 1, reset = false) => {
        try {
            const response = await bidApi.getAuctionBids(id, page, 5);
            console.log('ÏûÖÏ∞∞ ÎÇ¥Ïó≠ ÏùëÎãµ:', response);
            
            let bidData = [];
            if (response.content) {
                console.log('ÏûÖÏ∞∞ Îç∞Ïù¥ÌÑ∞:', response.content);
                bidData = response.content;
                setHasMoreBids(!response.last);
            } else if (Array.isArray(response)) {
                console.log('ÏûÖÏ∞∞ Î∞∞Ïó¥ Îç∞Ïù¥ÌÑ∞:', response);
                bidData = response;
                setHasMoreBids(false);
            }
            
            // ÏÉÅÌÉúÎ≥Ñ Ï†ïÎ†¨ (ÎÇôÏ∞∞ > ÏµúÏã†ÏûÖÏ∞∞ > ÏùºÎ∞òÏûÖÏ∞∞ > Ï∑®ÏÜå)
            const sortedBids = bidData.sort((a, b) => {
                const statusA = a.status || a.bidStatus;
                const statusB = b.status || b.bidStatus;
                
                // ÏÉÅÌÉúÎ≥Ñ Ïö∞ÏÑ†ÏàúÏúÑ
                const getStatusPriority = (status) => {
                    if (status === 'WON') return 1; // ÎÇôÏ∞∞ ÏµúÏö∞ÏÑ†
                    if (status === 'BID') return 2; // ÏûÖÏ∞∞Ï§ë
                    if (status === 'CANCEL') return 3; // Ï∑®ÏÜå ÏµúÌïòÏúÑ
                    return 2; // Í∏∞Î≥∏Í∞í
                };
                
                const priorityA = getStatusPriority(statusA);
                const priorityB = getStatusPriority(statusB);
                
                // ÏÉÅÌÉú Ïö∞ÏÑ†ÏàúÏúÑÍ∞Ä Îã§Î•¥Î©¥ ÏÉÅÌÉúÏàú Ï†ïÎ†¨
                if (priorityA !== priorityB) {
                    return priorityA - priorityB;
                }
                
                // Í∞ôÏùÄ ÏÉÅÌÉúÎ©¥ ÎÇ†ÏßúÏàú Ï†ïÎ†¨
                const dateA = a.createdAt || a.bidTime || a.createTime;
                const dateB = b.createdAt || b.bidTime || b.createTime;
                
                if (dateA && dateB) {
                    return new Date(dateB) - new Date(dateA); // ÏµúÏã†Ïàú
                }
                
                // ÎÇ†ÏßúÍ∞Ä ÏóÜÏúºÎ©¥ ÏûÖÏ∞∞Í∞ÄÏàú
                const priceA = a.price || a.bidPrice || 0;
                const priceB = b.price || b.bidPrice || 0;
                return priceB - priceA;
            });
            
            setBids(prev => reset ? sortedBids : [...prev, ...sortedBids]);
        } catch (error) {
            console.error('ÏûÖÏ∞∞ ÎÇ¥Ïó≠ Ï°∞Ìöå Ïã§Ìå®:', error);
        }
    }, [id]);
    
    // ÏûÖÏ∞∞Í∞Ä ÏûÖÎ†• Ìï∏Îì§Îü¨
    const handleBidPriceChange = (e) => {
        const value = e.target.value.replace(/[^0-9]/g, ''); // Ïà´ÏûêÎßå ÌóàÏö©
        setBidPrice(value);
        setBidPriceDisplay(value ? parseInt(value).toLocaleString() : '');
    };

    const handleBid = async () => {
        const currentBidPrice = parseInt(bidPrice);
        const minBidPrice = auction.currentPrice ? auction.currentPrice + 1000 : auction.startPrice;
        
        console.log('ÏûÖÏ∞∞ ÏãúÎèÑ:', {
            bidPrice: currentBidPrice,
            minBidPrice,
            currentPrice: auction.currentPrice,
            startPrice: auction.startPrice
        });
        
        if (!bidPrice || isNaN(currentBidPrice) || currentBidPrice < minBidPrice) {
            showToast(`ÏµúÏÜå ÏûÖÏ∞∞Í∞ÄÎäî ${minBidPrice.toLocaleString()}ÏõêÏûÖÎãàÎã§.`, 'error');
            return;
        }
        
        setBidLoading(true);
        try {
            console.log('ÏûÖÏ∞∞ API Ìò∏Ï∂ú:', { auctionId: id, price: currentBidPrice });
            const response = await bidApi.createBid(id, { price: currentBidPrice });
            console.log('ÏûÖÏ∞∞ ÏùëÎãµ:', response);
            showToast('ÏûÖÏ∞∞Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success');
            setBidPrice('');
            setBidPriceDisplay('');
            // ÏûÖÏ∞∞ ÌõÑ Îç∞Ïù¥ÌÑ∞ Í∞±Ïã†ÏùÄ WebSocketÏúºÎ°ú Ï≤òÎ¶¨
        } catch (error) {
            console.error('ÏûÖÏ∞∞ Ïò§Î•ò:', error);
            showToast(error.message || 'ÏûÖÏ∞∞Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
        } finally {
            setBidLoading(false);
        }
    };
    
    // WebSocket Íµ¨ÎèÖ ÏÑ§Ï†ï
    useEffect(() => {
        if (!isConnected() || !id) return;
        
        const handleBidUpdate = (message) => {
            console.log('ÏûÖÏ∞∞ ÏóÖÎç∞Ïù¥Ìä∏ ÏàòÏã†:', message);
            try {
                const bidUpdate = JSON.parse(message.body);
                // Ïã§ÏãúÍ∞Ñ Í≤ΩÎß§ ÌòÑÏû¨Í∞Ä Î∞è ÏûÖÏ∞∞ Ïàò ÏóÖÎç∞Ïù¥Ìä∏
                setAuction(prev => ({
                    ...prev,
                    currentPrice: bidUpdate.currentPrice || bidUpdate.price,
                    bidCount: (prev.bidCount || 0) + 1 // ÏûÖÏ∞∞ Ïàò Ï¶ùÍ∞Ä
                }));
                // ÏûÖÏ∞∞ Î™©Î°ù ÏµúÏã†Ìôî
                fetchBids(1, true);
            } catch (error) {
                console.error('ÏûÖÏ∞∞ ÏóÖÎç∞Ïù¥Ìä∏ Ï≤òÎ¶¨ Ïò§Î•ò:', error);
            }
        };
        
        const handleWonUpdate = (message) => {
            console.log('ÎÇôÏ∞∞ ÏóÖÎç∞Ïù¥Ìä∏ ÏàòÏã†:', message);
            try {
                const wonUpdate = JSON.parse(message.body);
                const finalPrice = wonUpdate.finalPrice || wonUpdate.currentPrice || wonUpdate.price;
                setAuction(prev => ({
                    ...prev,
                    isWon: true,
                    currentPrice: finalPrice
                }));
                showToast(`üéâ ÎÇôÏ∞∞ ÏôÑÎ£å!\nÏµúÏ¢Ö ÎÇôÏ∞∞Í∞Ä: ${finalPrice ? finalPrice.toLocaleString() : 'Ï†ïÎ≥¥ ÏóÜÏùå'}Ïõê`, 'success');
            } catch (error) {
                console.error('ÎÇôÏ∞∞ ÏóÖÎç∞Ïù¥Ìä∏ Ï≤òÎ¶¨ Ïò§Î•ò:', error);
            }
        };
        
        // Íµ¨ÎèÖ ÏÑ§Ï†ï
        const setupSubscriptions = async () => {
            try {
                console.log(`Í≤ΩÎß§ ${id} WebSocket Íµ¨ÎèÖ ÏãúÏûë`);
                await subscribe(`/topic/auction/${id}/bid`, handleBidUpdate);
                await subscribe(`/topic/auction/${id}/won`, handleWonUpdate);
                console.log(`Í≤ΩÎß§ ${id} WebSocket Íµ¨ÎèÖ ÏôÑÎ£å`);
            } catch (error) {
                console.error('WebSocket Íµ¨ÎèÖ ÏÑ§Ï†ï Ïã§Ìå®:', error);
            }
        };
        
        setupSubscriptions();
        
        return () => {
            console.log(`Í≤ΩÎß§ ${id} WebSocket Íµ¨ÎèÖ Ìï¥Ï†ú`);
            unsubscribe(`/topic/auction/${id}/bid`);
            unsubscribe(`/topic/auction/${id}/won`);
        };
    }, [isConnected, id, fetchBids, showToast, subscribe, unsubscribe]);
    
    // ÎÇ®ÏùÄ ÏãúÍ∞Ñ Í≥ÑÏÇ∞ Ìï®Ïàò
    const calculateTimeLeft = useCallback(() => {
        if (!auction?.endTime) return "";
        
        const now = new Date().getTime();
        const endTime = new Date(auction.endTime).getTime();
        const difference = endTime - now;
        
        if (difference <= 0) {
            return "Ï¢ÖÎ£åÎê®";
        }
        
        const days = Math.floor(difference / (1000 * 60 * 60 * 24));
        const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((difference % (1000 * 60)) / 1000);
        
        if (days > 0) return `${days}Ïùº ${hours}ÏãúÍ∞Ñ ${minutes}Î∂Ñ`;
        if (hours > 0) return `${hours}ÏãúÍ∞Ñ ${minutes}Î∂Ñ ${seconds}Ï¥à`;
        if (minutes > 0) return `${minutes}Î∂Ñ ${seconds}Ï¥à`;
        return `${seconds}Ï¥à`;
    }, [auction?.endTime]);
    
    // Ïã§ÏãúÍ∞Ñ Ïπ¥Ïö¥Ìä∏Îã§Ïö¥
    useEffect(() => {
        if (!auction?.endTime) return;
        
        const timer = setInterval(() => {
            setTimeLeft(calculateTimeLeft());
        }, 1000);
        
        return () => clearInterval(timer);
    }, [auction?.endTime, calculateTimeLeft]);
    
    useEffect(() => {
        fetchAuction();
        fetchBids(1, true);
    }, [fetchAuction, fetchBids]);

    if (loading) {
        return (
            <div style={{ background: "#f8fafc", minHeight: "100vh" }}>
                <HeaderNav />
                <div style={{
                    maxWidth: 700,
                    margin: "40px auto",
                    background: "#fff",
                    borderRadius: 14,
                    padding: 42,
                    boxShadow: "0 4px 24px #0001",
                    textAlign: "center"
                }}>
                    <LoadingSpinner size="large" message="Í≤ΩÎß§ Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ë..." />
                </div>
            </div>
        );
    }

    if (!auction) {
        return (
            <div style={{ background: "#f8fafc", minHeight: "100vh" }}>
                <HeaderNav />
                <div style={{
                    maxWidth: 700,
                    margin: "40px auto",
                    background: "#fff",
                    borderRadius: 14,
                    padding: 42,
                    boxShadow: "0 4px 24px #0001",
                    textAlign: "center"
                }}>
                    <h2>Í≤ΩÎß§ ÏÉÅÌíàÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.</h2>
                    <button
                        onClick={() => navigate("/")}
                        style={{
                            marginTop: 18,
                            padding: "10px 24px",
                            borderRadius: 8,
                            background: "#7f56fd",
                            color: "#fff",
                            fontWeight: 500,
                            fontSize: 16,
                            border: "none"
                        }}
                    >
                        Î©îÏù∏ÏúºÎ°ú
                    </button>
                </div>
            </div>
        );
    }

    return (
        <div style={{ background: "#f8fafc", minHeight: "100vh" }}>
            <HeaderNav />
            <div style={{
                maxWidth: 700,
                margin: "40px auto",
                background: "#fff",
                borderRadius: 14,
                padding: 42,
                boxShadow: "0 4px 24px #0001"
            }}>
                {/* Í≤ΩÎß§ ÏÉÅÌÉú ÎùºÎ≤® */}
                <div style={{
                    display: "inline-block",
                    padding: "6px 12px",
                    backgroundColor: auction.isWon ? "#28a745" : new Date(auction.endTime) < new Date() ? "#dc3545" : "#7f56fd",
                    color: "white",
                    borderRadius: "20px",
                    fontSize: "12px",
                    fontWeight: "bold",
                    marginBottom: "12px"
                }}>
                    {auction.isWon ? "ÎÇôÏ∞∞ ÏôÑÎ£å" : new Date(auction.endTime) < new Date() ? "Í≤ΩÎß§ Ï¢ÖÎ£å" : "Í≤ΩÎß§ ÏßÑÌñâÏ§ë"}
                </div>

                {/* Ïù¥ÎØ∏ÏßÄ Î†åÎçîÎßÅ */}
                {auction.productImageUrl ? (
                    <img
                        src={auction.productImageUrl}
                        alt={auction.productName}
                        style={{ width: "100%", borderRadius: 12, maxHeight: 340, objectFit: "cover" }}
                    />
                ) : (
                    <div style={{
                        width: "100%", height: 280, background: "#ddd",
                        borderRadius: 12, display: "flex", alignItems: "center",
                        justifyContent: "center", fontSize: 16, color: "#666"
                    }}>
                        Ïù¥ÎØ∏ÏßÄ ÏóÜÏùå
                    </div>
                )}

                {/* ÏÉÅÌíà Ï†ïÎ≥¥ */}
                <div style={{ marginTop: 26, fontSize: 27, fontWeight: 700 }}>
                    {auction.productName}
                </div>
                <div style={{ margin: "10px 0 18px 0", color: "#888", fontSize: 16 }}>
                    ÌåêÎß§Ïûê: {auction.sellerNickname}
                </div>
                {/* Í∞ÄÍ≤© Ï†ïÎ≥¥ Ïπ¥Îìú */}
                <div style={{ 
                    display: "flex", 
                    gap: 20, 
                    marginTop: 24, 
                    marginBottom: 20 
                }}>
                    {/* ÏãúÏûëÍ∞Ä */}
                    <div style={{
                        flex: 1,
                        padding: "18px",
                        backgroundColor: "#f5f5f5",
                        borderRadius: 10,
                        border: "1px solid #d1d5db",
                        textAlign: "center"
                    }}>
                        <div style={{ 
                            fontSize: 11, 
                            color: "#9ca3af", 
                            fontWeight: 600, 
                            marginBottom: 6,
                            textTransform: "uppercase",
                            letterSpacing: "1px"
                        }}>
                            ÏãúÏûëÍ∞Ä
                        </div>
                        <div style={{ 
                            fontSize: 16, 
                            color: "#6b7280", 
                            fontWeight: 500 
                        }}>
                            {auction.startPrice.toLocaleString()}Ïõê
                        </div>
                    </div>
                    
                    {/* ÌòÑÏû¨Í∞Ä */}
                    <div style={{
                        flex: 1.5,
                        padding: "18px",
                        background: auction.currentPrice 
                            ? "linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)" 
                            : "linear-gradient(135deg, #e5e7eb 0%, #d1d5db 100%)",
                        borderRadius: 10,
                        textAlign: "center",
                        boxShadow: auction.currentPrice ? "0 4px 15px rgba(59, 130, 246, 0.3)" : "0 2px 8px rgba(0,0,0,0.1)",
                        position: "relative",
                        overflow: "hidden"
                    }}>
                        <div style={{ 
                            fontSize: 11, 
                            color: auction.currentPrice ? "rgba(255,255,255,0.85)" : "#9ca3af", 
                            fontWeight: 600, 
                            marginBottom: 6,
                            textTransform: "uppercase",
                            letterSpacing: "1px"
                        }}>
                            ÌòÑÏû¨Í∞Ä
                        </div>
                        <div style={{ 
                            fontSize: 24, 
                            color: auction.currentPrice ? "#ffffff" : "#9ca3af", 
                            fontWeight: 800,
                            textShadow: auction.currentPrice ? "0 2px 4px rgba(0,0,0,0.2)" : "none",
                            lineHeight: 1.2
                        }}>
                            {auction.currentPrice ? 
                                `${auction.currentPrice.toLocaleString()}Ïõê` : 
                                "ÏûÖÏ∞∞ ÎåÄÍ∏∞Ï§ë"
                            }
                        </div>
                        {auction.currentPrice && (
                            <div style={{
                                position: "absolute",
                                top: -8,
                                right: -8,
                                width: 16,
                                height: 16,
                                borderRadius: "50%",
                                backgroundColor: "#10b981",
                                animation: "pulse 2s infinite"
                            }}></div>
                        )}
                    </div>
                </div>
                {/* Í≤ΩÎß§ Ï†ïÎ≥¥ Ïπ¥ÎìúÎì§ */}
                <div style={{ 
                    display: "flex", 
                    gap: 16, 
                    marginTop: 18 
                }}>
                    {/* ÎÇ®ÏùÄ ÏãúÍ∞Ñ */}
                    <div style={{ 
                        flex: 2.5,
                        padding: "20px",
                        background: (() => {
                            if (timeLeft === "Ï¢ÖÎ£åÎê®") return "linear-gradient(135deg, #ef4444 0%, #dc2626 100%)";
                            if (timeLeft.includes("Î∂Ñ") && !timeLeft.includes("ÏãúÍ∞Ñ") && !timeLeft.includes("Ïùº")) return "linear-gradient(135deg, #f59e0b 0%, #d97706 100%)";
                            return "linear-gradient(135deg, #059669 0%, #047857 100%)";
                        })(),
                        borderRadius: 10,
                        color: "white",
                        textAlign: "center",
                        boxShadow: "0 3px 10px rgba(0,0,0,0.2)",
                        position: "relative",
                        overflow: "hidden"
                    }}>
                        <div style={{ 
                            fontSize: 10, 
                            color: "rgba(255,255,255,0.8)", 
                            fontWeight: 600, 
                            marginBottom: 4,
                            textTransform: "uppercase",
                            letterSpacing: "1px"
                        }}>
                            {timeLeft === "Ï¢ÖÎ£åÎê®" ? "ÏÉÅÌÉú" : "ÎÇ®ÏùÄ ÏãúÍ∞Ñ"}
                        </div>
                        <div style={{ 
                            fontSize: 18, 
                            fontWeight: 800,
                            textShadow: "0 1px 3px rgba(0,0,0,0.3)",
                            lineHeight: 1.1
                        }}>
                            {timeLeft === "Ï¢ÖÎ£åÎê®" ? "‚è∞ Í≤ΩÎß§ Ï¢ÖÎ£å" : `‚è±Ô∏è ${timeLeft}`}
                        </div>
                        {timeLeft !== "Ï¢ÖÎ£åÎê®" && timeLeft.includes("Î∂Ñ") && !timeLeft.includes("ÏãúÍ∞Ñ") && (
                            <div style={{
                                position: "absolute",
                                top: -6,
                                right: -6,
                                width: 12,
                                height: 12,
                                borderRadius: "50%",
                                backgroundColor: "#fbbf24",
                                animation: "pulse 1s infinite"
                            }}></div>
                        )}
                    </div>
                    
                    {/* ÏûÖÏ∞∞ Ïàò */}
                    <div style={{
                        flex: 1,
                        padding: "20px 16px",
                        backgroundColor: "#f8fafc",
                        borderRadius: 10,
                        border: "1px solid #e2e8f0",
                        textAlign: "center"
                    }}>
                        <div style={{ 
                            fontSize: 10, 
                            color: "#94a3b8", 
                            fontWeight: 600, 
                            marginBottom: 4,
                            textTransform: "uppercase",
                            letterSpacing: "1px"
                        }}>
                            ÏûÖÏ∞∞ Ïàò
                        </div>
                        <div style={{ 
                            fontSize: 18, 
                            color: "#475569", 
                            fontWeight: 700,
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            gap: 4
                        }}>
                            üî• {auction.bidCount || 0}
                        </div>
                    </div>
                </div>
                
                {/* ÎßàÍ∞ê ÏãúÍ∞Ñ */}
                <div style={{ 
                    marginTop: 14,
                    padding: "14px 18px",
                    backgroundColor: "#f9fafb",
                    borderRadius: 8,
                    border: "1px solid #e5e7eb",
                    textAlign: "center"
                }}>
                    <div style={{ 
                        fontSize: 10, 
                        color: "#9ca3af", 
                        fontWeight: 600,
                        marginBottom: 3,
                        textTransform: "uppercase",
                        letterSpacing: "1px"
                    }}>
                        ÎßàÍ∞ê ÏòàÏ†ï
                    </div>
                    <div style={{ 
                        fontSize: 13, 
                        color: "#6b7280",
                        fontWeight: 600
                    }}>
                        üìÖ {new Date(auction.endTime).toLocaleString('ko-KR', {
                            month: 'short',
                            day: 'numeric',
                            hour: '2-digit',
                            minute: '2-digit'
                        })}
                    </div>
                </div>

                {/* Ï¢ÖÎ£åÎêú Í≤ΩÎß§ ÏïàÎÇ¥ */}
                {auction && (auction.isWon || new Date(auction.endTime) < new Date()) && (
                    <div style={{ 
                        marginTop: 36, 
                        padding: 20, 
                        backgroundColor: auction.isWon ? "#d4edda" : "#f8d7da", 
                        borderRadius: 8,
                        border: `1px solid ${auction.isWon ? "#c3e6cb" : "#f5c6cb"}`,
                        textAlign: "center"
                    }}>
                        <h3 style={{ 
                            margin: "0 0 8px 0", 
                            fontSize: 18, 
                            fontWeight: 600,
                            color: auction.isWon ? "#155724" : "#721c24"
                        }}>
                            {auction.isWon ? "üéâ ÎÇôÏ∞∞ ÏôÑÎ£å!" : "‚è∞ Í≤ΩÎß§ Ï¢ÖÎ£å"}
                        </h3>
                        <p style={{ 
                            margin: 0, 
                            fontSize: 14, 
                            color: auction.isWon ? "#155724" : "#721c24"
                        }}>
                            {auction.isWon 
                                ? `ÏµúÏ¢Ö ÎÇôÏ∞∞Í∞Ä: ${auction.currentPrice ? auction.currentPrice.toLocaleString() : 'Ï†ïÎ≥¥ ÏóÜÏùå'}Ïõê`
                                : "Í≤ΩÎß§ ÏãúÍ∞ÑÏù¥ Ï¢ÖÎ£åÎêòÏóàÏäµÎãàÎã§."
                            }
                        </p>
                    </div>
                )}

                {/* ÏûÖÏ∞∞ ÏÑπÏÖò */}
                {auction && !auction.isWon && new Date(auction.endTime) >= new Date() && (
                    <div style={{ marginTop: 36, padding: 20, backgroundColor: "#f8f9fa", borderRadius: 8 }}>
                        <h3 style={{ margin: "0 0 16px 0", fontSize: 18, fontWeight: 600 }}>ÏûÖÏ∞∞ÌïòÍ∏∞</h3>
                        <div style={{ display: "flex", alignItems: "center", gap: 12, marginBottom: 16 }}>
                            <div style={{ flex: 1, position: "relative" }}>
                                <input
                                    type="text"
                                    value={bidPriceDisplay}
                                    onChange={handleBidPriceChange}
                                    placeholder={`ÏµúÏÜå ${(auction.currentPrice ? auction.currentPrice + 1000 : auction.startPrice).toLocaleString()}Ïõê`}
                                    style={{
                                        width: "100%",
                                        padding: "16px 20px",
                                        border: "2px solid #e2e8f0",
                                        borderRadius: 12,
                                        fontSize: 18,
                                        fontWeight: 600,
                                        color: "#2d3748",
                                        backgroundColor: "#ffffff",
                                        transition: "all 0.3s ease",
                                        outline: "none",
                                        boxShadow: "0 2px 4px rgba(0,0,0,0.05)"
                                    }}
                                    onFocus={(e) => {
                                        e.target.style.borderColor = "#667eea";
                                        e.target.style.boxShadow = "0 4px 12px rgba(102, 126, 234, 0.15)";
                                        e.target.style.transform = "translateY(-1px)";
                                    }}
                                    onBlur={(e) => {
                                        e.target.style.borderColor = "#e2e8f0";
                                        e.target.style.boxShadow = "0 2px 4px rgba(0,0,0,0.05)";
                                        e.target.style.transform = "translateY(0)";
                                    }}
                                    onMouseEnter={(e) => {
                                        if (document.activeElement !== e.target) {
                                            e.target.style.borderColor = "#cbd5e0";
                                            e.target.style.boxShadow = "0 3px 8px rgba(0,0,0,0.1)";
                                        }
                                    }}
                                    onMouseLeave={(e) => {
                                        if (document.activeElement !== e.target) {
                                            e.target.style.borderColor = "#e2e8f0";
                                            e.target.style.boxShadow = "0 2px 4px rgba(0,0,0,0.05)";
                                        }
                                    }}
                                />
                                <span style={{ 
                                    position: "absolute",
                                    right: 20,
                                    top: "50%",
                                    transform: "translateY(-50%)",
                                    fontSize: 16, 
                                    color: "#718096",
                                    fontWeight: 500,
                                    pointerEvents: "none"
                                }}>Ïõê</span>
                            </div>
                        </div>
                        <button
                            onClick={handleBid}
                            disabled={bidLoading || !bidPrice || isNaN(parseInt(bidPrice)) || parseInt(bidPrice) < (auction.currentPrice ? auction.currentPrice + 1000 : auction.startPrice)}
                            style={{
                                background: bidLoading || !bidPrice || isNaN(parseInt(bidPrice)) || parseInt(bidPrice) < (auction.currentPrice ? auction.currentPrice + 1000 : auction.startPrice) ? "#ccc" : "#7f56fd",
                                color: "#fff",
                                padding: "12px 24px",
                                borderRadius: 6,
                                fontWeight: 500,
                                fontSize: 16,
                                border: "none",
                                cursor: bidLoading || !bidPrice || isNaN(parseInt(bidPrice)) || parseInt(bidPrice) < (auction.currentPrice ? auction.currentPrice + 1000 : auction.startPrice) ? "not-allowed" : "pointer"
                            }}
                        >
                            {bidLoading ? "ÏûÖÏ∞∞ Ï§ë..." : "ÏûÖÏ∞∞ÌïòÍ∏∞"}
                        </button>
                    </div>
                )}
                
                {/* ÏûÖÏ∞∞ ÎÇ¥Ïó≠ */}
                {bids.length > 0 && (
                    <div style={{ marginTop: 32 }}>
                        <div style={{ 
                            display: "flex", 
                            justifyContent: "space-between", 
                            alignItems: "center",
                            marginBottom: 20 
                        }}>
                            <h3 style={{ margin: 0, fontSize: 20, fontWeight: 700, color: "#2d3748" }}>
                                ÏûÖÏ∞∞ ÌòÑÌô©
                            </h3>
                            <div style={{ 
                                fontSize: 14, 
                                color: "#718096",
                                backgroundColor: "#f7fafc",
                                padding: "6px 12px",
                                borderRadius: 16,
                                fontWeight: 500
                            }}>
                                Ï¥ù {bids.length}Í±¥
                            </div>
                        </div>
                        <div style={{ 
                            maxHeight: 400, 
                            overflowY: "auto", 
                            border: "1px solid #e2e8f0", 
                            borderRadius: 12,
                            backgroundColor: "#ffffff",
                            boxShadow: "0 1px 3px rgba(0,0,0,0.1)"
                        }}>
                            {bids.map((bid, index) => {
                                console.log(`ÏûÖÏ∞∞ ${index}:`, bid, 'keys:', Object.keys(bid));
                                return (
                                <div key={index} style={{
                                    padding: "20px 24px",
                                    borderBottom: index < bids.length - 1 ? "1px solid #e2e8f0" : "none",
                                    display: "flex",
                                    justifyContent: "space-between",
                                    alignItems: "center",
                                    backgroundColor: (() => {
                                        const status = bid.status || bid.bidStatus;
                                        if (status === 'WON') return "linear-gradient(135deg, #f0fff4 0%, #e6fffa 100%)"; // ÎÇôÏ∞∞: Í∑∏ÎùºÎç∞Ïù¥ÏÖò Ï¥àÎ°ù
                                        if (status === 'CANCEL') return "linear-gradient(135deg, #fef5f5 0%, #fed7d7 100%)"; // Ï∑®ÏÜå: Í∑∏ÎùºÎç∞Ïù¥ÏÖò Îπ®Í∞ï
                                        if (index === 0 && status === 'BID') return "linear-gradient(135deg, #f7faff 0%, #edf2ff 100%)"; // ÏµúÏã†: Í∑∏ÎùºÎç∞Ïù¥ÏÖò Î≥¥Îùº
                                        return index % 2 === 0 ? "#fafafa" : "#ffffff"; // Ï§ÑÎ¨¥Îä¨ Ìö®Í≥º
                                    })(),
                                    borderLeft: (() => {
                                        const status = bid.status || bid.bidStatus;
                                        if (status === 'WON') return "4px solid #48bb78"; // ÎÇôÏ∞∞: Ï¥àÎ°ù
                                        if (status === 'CANCEL') return "4px solid #f56565"; // Ï∑®ÏÜå: Îπ®Í∞ï
                                        if (index === 0 && status === 'BID') return "4px solid #667eea"; // ÏµúÏã†: Î≥¥Îùº
                                        return "4px solid transparent";
                                    })(),
                                    opacity: (bid.status || bid.bidStatus) === 'CANCEL' ? 0.75 : 1,
                                    transition: "all 0.2s ease",
                                    cursor: "default",
                                    position: "relative"
                                }}>
                                    <div>
                                        <div style={{ fontWeight: 500, fontSize: 16, display: "flex", alignItems: "center", gap: 8 }}>
                                            {(bid.price || bid.bidPrice || 0).toLocaleString()}Ïõê
                                            {/* ÏûÖÏ∞∞ ÏÉÅÌÉú Î∞∞ÏßÄ */}
                                            {(() => {
                                                const status = bid.status || bid.bidStatus;
                                                if (status === 'WON') {
                                                    return (
                                                        <span style={{
                                                            fontSize: 11,
                                                            padding: "4px 10px",
                                                            background: "linear-gradient(135deg, #48bb78 0%, #38a169 100%)",
                                                            color: "white",
                                                            borderRadius: 12,
                                                            fontWeight: "600",
                                                            textShadow: "0 1px 2px rgba(0,0,0,0.1)",
                                                            boxShadow: "0 2px 4px rgba(72, 187, 120, 0.3)"
                                                        }}>
                                                            üèÜ ÎÇôÏ∞∞
                                                        </span>
                                                    );
                                                } else if (status === 'CANCEL') {
                                                    return (
                                                        <span style={{
                                                            fontSize: 11,
                                                            padding: "4px 10px",
                                                            background: "linear-gradient(135deg, #f56565 0%, #e53e3e 100%)",
                                                            color: "white",
                                                            borderRadius: 12,
                                                            fontWeight: "600",
                                                            textShadow: "0 1px 2px rgba(0,0,0,0.1)",
                                                            boxShadow: "0 2px 4px rgba(245, 101, 101, 0.3)"
                                                        }}>
                                                            ‚ùå Ï∑®ÏÜå
                                                        </span>
                                                    );
                                                } else if (status === 'BID') {
                                                    return index === 0 ? (
                                                        <span style={{
                                                            fontSize: 11,
                                                            padding: "4px 10px",
                                                            background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
                                                            color: "white",
                                                            borderRadius: 12,
                                                            fontWeight: "600",
                                                            textShadow: "0 1px 2px rgba(0,0,0,0.1)",
                                                            boxShadow: "0 2px 4px rgba(102, 126, 234, 0.3)",
                                                            animation: "pulse 2s infinite"
                                                        }}>
                                                            ‚ö° ÏµúÏã†
                                                        </span>
                                                    ) : (
                                                        <span style={{
                                                            fontSize: 11,
                                                            padding: "4px 10px",
                                                            background: "linear-gradient(135deg, #a0aec0 0%, #718096 100%)",
                                                            color: "white",
                                                            borderRadius: 12,
                                                            fontWeight: "600",
                                                            textShadow: "0 1px 2px rgba(0,0,0,0.1)"
                                                        }}>
                                                            üí∞ ÏûÖÏ∞∞
                                                        </span>
                                                    );
                                                }
                                                return null;
                                            })()}
                                        </div>
                                        <div style={{ 
                                            fontSize: 14, 
                                            color: "#4a5568", 
                                            marginTop: 4,
                                            fontWeight: 500,
                                            display: "flex",
                                            alignItems: "center",
                                            gap: 6
                                        }}>
                                            <span style={{ 
                                                width: 8, 
                                                height: 8, 
                                                borderRadius: "50%", 
                                                backgroundColor: "#48bb78",
                                                display: "inline-block"
                                            }}></span>
                                            {bid.bidderNickname || bid.userNickname || "ÏùµÎ™Ö ÏÇ¨Ïö©Ïûê"}
                                        </div>
                                    </div>
                                    <div style={{ 
                                        textAlign: "right",
                                        display: "flex",
                                        flexDirection: "column",
                                        alignItems: "flex-end",
                                        gap: 4
                                    }}>
                                        <div style={{ 
                                            fontSize: 13, 
                                            color: "#718096",
                                            fontWeight: 500,
                                            backgroundColor: "#f7fafc",
                                            padding: "4px 8px",
                                            borderRadius: 6
                                        }}>
                                            {bid.createdAt || bid.bidTime || bid.createTime ? 
                                                new Date(bid.createdAt || bid.bidTime || bid.createTime).toLocaleString('ko-KR', {
                                                    month: 'short',
                                                    day: 'numeric',
                                                    hour: '2-digit',
                                                    minute: '2-digit'
                                                }) : 'ÏãúÍ∞Ñ ÎØ∏ÏÉÅ'
                                            }
                                        </div>
                                        <div style={{ 
                                            fontSize: 12, 
                                            color: "#a0aec0",
                                            fontWeight: 400
                                        }}>
                                            #{bids.length - index}Î≤àÏß∏ ÏûÖÏ∞∞
                                        </div>
                                    </div>
                                </div>
                                );
                            })}
                        </div>
                        {hasMoreBids && (
                            <div style={{ 
                                padding: "16px 24px",
                                textAlign: "center",
                                borderTop: "1px solid #e2e8f0"
                            }}>
                                <button
                                    onClick={() => {
                                        const nextPage = bidPage + 1;
                                        setBidPage(nextPage);
                                        fetchBids(nextPage, false);
                                    }}
                                    style={{
                                        padding: "12px 24px",
                                        background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
                                        border: "none",
                                        borderRadius: 20,
                                        cursor: "pointer",
                                        color: "white",
                                        fontWeight: 600,
                                        fontSize: 14,
                                        boxShadow: "0 4px 12px rgba(102, 126, 234, 0.3)",
                                        transition: "all 0.2s ease",
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "center",
                                        gap: 6,
                                        margin: "0 auto"
                                    }}
                                    onMouseOver={(e) => {
                                        e.target.style.transform = "translateY(-2px)";
                                        e.target.style.boxShadow = "0 6px 16px rgba(102, 126, 234, 0.4)";
                                    }}
                                    onMouseOut={(e) => {
                                        e.target.style.transform = "translateY(0)";
                                        e.target.style.boxShadow = "0 4px 12px rgba(102, 126, 234, 0.3)";
                                    }}
                                >
                                    <span>üìÑ</span>
                                    Îçî ÎßéÏùÄ ÏûÖÏ∞∞ Î≥¥Í∏∞
                                </button>
                            </div>
                        )}
                    </div>
                )}
                
                {/* Î≤ÑÌäº */}
                <div style={{ marginTop: 36 }}>
                    <button
                        style={{
                            background: "#eee",
                            color: "#333",
                            padding: "13px 24px",
                            borderRadius: 8,
                            fontWeight: 500,
                            fontSize: 17,
                            border: "none"
                        }}
                        onClick={() => navigate(-1)}
                    >
                        Î™©Î°ùÏúºÎ°ú
                    </button>
                </div>

                {/* ÏóêÎü¨ Î©îÏãúÏßÄ */}
                {errorMsg && <div style={{ color: "red", marginTop: 18 }}>{errorMsg}</div>}
            </div>
        </div>
    );
}
